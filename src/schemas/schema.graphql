# import Review from "reviews.graphql"

interface ItemInterface {
	id: ID!
	name: String!
}
union UnionItem = Item1 | Item2

type Item1 implements ItemInterface {
	id: ID!
	name: String!
	items: [Item2!]
}

type Item2 implements ItemInterface {
	id: ID!
	name: String!
	items: [Item1!]
}

type Query {
	# humans: [Human!]
	# persons: [Person!]
	greeting: Hello!
	# hello: String
	itemsAsUnion: [UnionItem!]
	itemsAsInterface: [ItemInterface!]
}



type Hello {
	hello: String
}

# union Person = Adult | Child

# interface IdAndName {
# 	id: ID!
# 	name: String!
# }

# type Adult implements IdAndName {
# 	id: ID!
# 	name: String!
# 	work: String!
# }

# type Child implements IdAndName {
# 	id: ID!
# 	name: String!
# 	school: String!
# }



# type Dog {
# 	id: ID
# 	breed: String
# 	owner: Human
# }

# type Human {
# 	id: ID!
# 	name: String
# 	age: Int
# 	height: Int
# 	pets: [Dog!]
# }

